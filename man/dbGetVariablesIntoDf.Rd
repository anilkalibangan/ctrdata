% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{dbGetVariablesIntoDf}
\alias{dbGetVariablesIntoDf}
\title{Create a data frame from records in the database that have specified fields}
\usage{
dbGetVariablesIntoDf(fields = "", mongo = rmongodb::mongo.create(host =
  "127.0.0.1:27017", db = "users"), ns = "ctrdata", debug = FALSE)
}
\arguments{
\item{fields}{Vector of strings, with names of the sought fields.}

\item{mongo}{(\link{mongo}) A mongo connection object. If not provided,
defaults to database "users" on 127.0.0.1 port 27017.}

\item{ns}{Name of the collection in mongo database ("namespace"), defaults to
"ctrdata"}

\item{debug}{Printing additional information if set to \code{TRUE}; default
is \code{FALSE}.}
}
\value{
A data frame with columns corresponding to the sought fields. Note
  that a column for the record _id will always be included. The maximum
  number of rows of the returned data frame is equal to or less than the
  number of records in the data base.
}
\description{
With this convenience function, fields in the mongo database are retrieved
into an R dataframe. As mongo json fields within the record of a trial
can be hierarchical and structured, the function returns a concatenation
of values if there is more than one value or if the field is (in) an array,
such as follows: value 1 / value 2 / ... (see example)
}
\details{
For more sophisticated data retrieval from the database, see vignette examples
and other packages to query mongodb such as mongolite.
}
\examples{

\dontrun{

dbGetVariablesIntoDf("b1_sponsor.b31_and_b32_status_of_the_sponsor")[1,]
#                   _id  b1_sponsor.b31_and_b32_status_of_the_sponsor
#  1  2004-000015-25-GB                   Non-commercial / Commercial

dbGetVariablesIntoDf("keyword")[1:2,]
#            _id                                           keyword
#  1 NCT00129259  T1D / type 1 diabetes / type 1 diabetes mellitus

}

}

